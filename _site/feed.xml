<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2025-10-28T09:00:00-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jonathan Fuller</title><subtitle>Evidence-driven cybersecurity leadership, research, and outreach from Jonathan Fuller.
</subtitle><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><entry><title type="html">The Case for Proof-of-Value in Security Partnerships</title><link href="http://localhost:4000/blog/case-for-proof-of-value/" rel="alternate" type="text/html" title="The Case for Proof-of-Value in Security Partnerships" /><published>2025-10-30T00:00:00-04:00</published><updated>2025-10-27T20:06:51-04:00</updated><id>http://localhost:4000/blog/case-for-pov</id><content type="html" xml:base="http://localhost:4000/blog/case-for-proof-of-value/"><![CDATA[<p>As a newer CISO, I’m learning that not every lesson comes from doing something perfectly. Some come from realizing what you <em>didn’t</em> do. Proof-of-value (PoV) programs are a good example. They’re not new. Most mature security programs already use them. I haven’t led one myself yet, but I’ve seen firsthand how not having one can make onboarding harder than it needs to be.</p>

<p>This isn’t a “PoV 101” post. It’s more of a reflection: lessons learned, what I wish I’d done differently, and how I plan to approach vendor evaluations going forward.</p>

<p>I’ve found that experience often teaches faster than policy. The onboarding that goes well, and the ones that don’t, both leave an impression. For me, they highlighted how critical the early phase is, not just for security, but for every team that touches the tool (or feeds it data) once it’s live.</p>

<p><img src="/assets/blogs/cyberleader/soc.jpg" alt="Security team collaborating around a table" /></p>

<p>Our security team once onboarded a new product that seemed like a great fit with the right capabilities, the right integrations, the right promises. The marketing looked solid and we thought we had enough data to make a confident call. Once the contract was signed, though, the onboarding process felt less like a guided partnership and more like trial and error.</p>

<p>From this experience, I learned that even a good product can fall short if the onboarding experience isn’t structured, transparent, and responsive. For any organization, that early phase sets the tone for everything that follows…adoption, trust, and collaboration across multiple teams.</p>

<p>Now, we didn’t expect white-glove treatment. We are a smaller organization and understand the balance between cost and service. But what any team should expect is a <strong>clear, standardized, and secure onboarding process</strong> that helps everyone involved succeed without friction or guesswork.</p>

<hr />

<h2 id="setting-realistic-expectations">Setting Realistic Expectations</h2>

<p><img src="/assets/blogs/cyberleader/expectations.jpg" alt="Checklist illustration" /></p>

<p>When we bring in a new tool, structure matters more than hand-holding. A good onboarding process should include:</p>

<ul>
  <li><strong>Standardized checklists</strong> that provide a clear sequence of steps, templates, and configuration tasks that show what “ready” looks like for both technical and support teams.</li>
  <li><strong>Self-service components</strong> via a portal or dashboard for uploading documentation, completing setup forms, and tracking progress. This helps security, networking, and enterprise IT move in sync.</li>
  <li><strong>Tiered due diligence</strong> ensuring that even smaller or lower-risk organizations benefit from a deliberate and secure process.</li>
</ul>

<p>This shows that the vendor has a repeatable and scalable process that supports different stakeholders while still giving each what they need.</p>

<p>What all of our teams value most is <strong>clarity and collaboration</strong>. We don’t need sales conversations about additional new SKUs mid-deployment. We need to understand how to <strong>get full value from what we’ve already invested in</strong>, and how the product will evolve to stay relevant.</p>

<hr />

<h2 id="why-proof-of-value-matters">Why Proof-of-Value Matters</h2>

<p><img src="/assets/blogs/cyberleader/collab.jpg" alt="Handshake between two professionals" /></p>

<p>A proof-of-value (PoV) or pilot program gives the organization a realistic way to evaluate a tool before committing to it. It’s not about proving the product works (that’s expected, but often confirmed along the way). It’s about proving the <strong>partnership works</strong>. Can the vendor guide our analysts, enterprise engineers, and networking teams through setup and early operations with clarity?</p>

<p>Peer recommendations are also a huge signal. A strong endorsement from another CISO or cybersecurity lead who’s already tested the product can be just as valuable as a formal pilot. Ideally, you use both, i.e., peer feedback to gauge reputation, and a proof-of-value to validate how the tool performs in your environment.</p>

<p>In the defense world, readiness is often evaluated using the <strong>DOTMLPF-P</strong> model: Doctrine, Organization, Training, Materiel, Leadership, Personnel, Facilities, and Policy. It is a structured way to ask a simple question: <em>Are we ready to use this capability effectively?</em></p>

<p>The same logic applies in cybersecurity. Technology alone doesn’t create readiness. It has to align with our people, our processes, and the mission.</p>

<p>A PoV, in many ways, is a DOTMLPF-P check:</p>

<ul>
  <li>Does our current <strong>doctrine</strong> or set of playbooks need to change to use this effectively?</li>
  <li>Does it align with our <strong>organizational</strong> structure, i.e., security, IT, networking, and enterprise support?</li>
  <li>How steep is the <strong>training</strong> curve, and how quickly can our teams gain confidence?</li>
  <li>Does it complement our existing <strong>materiel</strong>, or the tools we already rely on across departments?</li>
  <li>What level of <strong>leadership</strong> involvement or oversight will it require?</li>
  <li>How does it impact <strong>personnel</strong> bandwidth and skill demands across teams?</li>
  <li>Are there <strong>facilities</strong> or infrastructure needs we didn’t anticipate?</li>
  <li>What <strong>policy</strong> changes might it trigger around access, data retention, or compliance?</li>
</ul>

<p>Running through that checklist during a PoV keeps the focus where it belongs…on capability, not marketing claims.</p>

<hr />

<h2 id="defining-success-from-ioc-to-foc">Defining Success: From IOC to FOC</h2>

<p><img src="/assets/blogs/cyberleader/ioc2foc.jpg" alt="IOC to FOC progression diagram" /></p>

<p>The defense world uses simple milestones to measure when a capability is ready. Those same ideas map well to security operations.</p>

<p><strong>Initial Operational Capability (IOC)</strong> is reached when a capability is available in its minimum, usefully deployable form. This typically occurs when some designated teams or organizations have received the system and can operate and maintain it.</p>

<p><strong>Full Operational Capability (FOC)</strong> is reached when system development is complete, all designated teams or organizations have received the system, and those teams can operate and maintain it.</p>

<p>In cybersecurity terms, IOC means the product is installed, configured, and being used effectively. We’re operational, even if still tuning. FOC means the product is fully refined for our environment, integrated into workflows, and producing measurable improvements in visibility, performance, or response.</p>

<p>As a rule of thumb, about <strong>10–15% of the total contract time</strong> should get us to IOC. On a one-year agreement, hat’s roughly one to two months. If it takes much longer, the product might be too complex or too dependent on vendor intervention.</p>

<p>We want to reach IOC relatively quickly, but not just for efficiency. We want to build confidence across our teams. We want analysts and engineers to operate, experiment, and adapt without waiting on vendor support. That is true IOC.</p>

<hr />

<h2 id="measuring-success-in-a-proof-of-value">Measuring Success in a Proof-of-Value</h2>

<p><img src="/assets/blogs/cyberleader/measure.jpg" alt="Image Idea: Dashboard-style graphic showing metrics like Time to IOC, Analyst Onboarding, and Alert Quality." /></p>

<p>When we evaluate a product, we try to focus on operational impact rather than the number of features. That’s not always easy. I still catch myself thinking “that dashboard looks amazing” before asking if anyone will actually use it.</p>

<p>So instead of counting features, we look for signs of real value:</p>

<ul>
  <li><strong>Time to IOC:</strong> How fast can all teams move from install to functional use?</li>
  <li><strong>Cross-team onboarding:</strong> How quickly do analysts adopt it?</li>
  <li><strong>Operational fit:</strong> Does it reduce friction or introduce new work?</li>
  <li><strong>Alert quality and outcomes:</strong> Are we seeing fewer, more meaningful alerts or just more noise?</li>
</ul>

<p>When those metrics are trending positive, then analysts are more likely to dive in and confidence follows.</p>

<p>Another simple, anecdotal metric: when you’re not hearing “ugh, not another pane of glass.” If what the new system provides is genuinely useful, analysts won’t avoid it. They’ll likely use it, willingly, and talk about it like it’s part of their toolkit and not another thing they have to babysit.</p>

<hr />

<h2 id="avoiding-common-pitfalls">Avoiding Common Pitfalls</h2>

<p><img src="/assets/blogs/cyberleader/redflag.png" alt="Image Idea: Simple visual of a “red flag” list or warning icons for common pitfalls." /></p>

<p>A few patterns can derail a good pilot:</p>

<ul>
  <li><strong>Pilots without documentation.</strong> If the vendor has to drive every step, analysts don’t build ownership or understanding.</li>
  <li><strong>Undefined success metrics.</strong> Without clear goals across departments, it’s impossible to tell whether the PoV delivered value.</li>
  <li><strong>Being distracted by advanced features.</strong> We care more about stability, integration, and usability than flashy features no one uses after week two.</li>
</ul>

<p>A strong PoV should be <strong>organization-led and vendor-supported</strong>, not the other way around.</p>

<hr />

<h2 id="using-ioc-foc-and-dotmlpf-p-to-shape-partnerships">Using IOC, FOC, and DOTMLPF-P to Shape Partnerships</h2>

<p><img src="/assets/blogs/cyberleader/deal.png" alt="Image Idea: Combined flow graphic — IOC → DOTMLPF-P readiness → FOC → Ongoing Partnership." /></p>

<p>IOC and FOC tell us how close we are to being fully operational. DOTMLPF-P helps us ask whether we are ready to sustain that capability once we get there.</p>

<p>If IOC is the milestone, then DOTMLPF-P is the checklist that keeps us aligned across people, process, and technology so we don’t just reach operational capability but we keep improving it.</p>

<p>The vendors who stand out are the ones who help us reach IOC fast, stay engaged through the messy middle, and keep improving as we grow toward FOC. That’s what partnership looks like.</p>

<hr />

<h2 id="closing-thoughts">Closing Thoughts</h2>

<p>New technology is easy to buy. Turning it into capability takes alignment of people, process, and mission all pulling in the same direction. When that happens across security, enterprise, and networking, everything just works better.</p>

<p>Every evaluation, even the ones that miss the mark, adds to our shared understanding of what effective defense looks like. That is the point of an empirical approach: learn fast, apply what you discover, and share what works.</p>

<p>Make some room. I’m growing here.</p>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="posts" /><category term="security operations" /><category term="vendor management" /><category term="proof of value" /><category term="onboarding" /><summary type="html"><![CDATA[Why structured pilots, clear onboarding checklists, and outcome-driven milestones are essential for security teams selecting new vendors.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/blogs/cyberleader/povthumb.jpg" /><media:content medium="image" url="http://localhost:4000/assets/blogs/cyberleader/povthumb.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">From Anomalous Traffic to Spycraft 2.0</title><link href="http://localhost:4000/blog/spycraft-2-0/" rel="alternate" type="text/html" title="From Anomalous Traffic to Spycraft 2.0" /><published>2025-10-24T00:00:00-04:00</published><updated>2025-10-27T18:53:39-04:00</updated><id>http://localhost:4000/blog/spycraft-2-0-bsidesnyc</id><content type="html" xml:base="http://localhost:4000/blog/spycraft-2-0/"><![CDATA[<p>During a reverse-engineering session, we encountered something unexpected: a malware sample opened an HTTPS session not to its known command-and-control (C&amp;C) destination, but to <strong>X.com</strong>. That single anomaly prompted a deeper question: was this an isolated artifact, or evidence of a new operational pattern we call <strong>Spycraft 2.0</strong>, where adversaries conceal command instructions within legitimate web services?</p>

<p>This observation exposed a larger issue. Malware authors increasingly rely on the open internet not only as infrastructure but as camouflage. If attackers can turn ordinary web applications into covert C&amp;C rendezvous points, defenders must learn to detect and stop them. Our research, presented at <strong>BSidesNYC 0x05</strong>, investigates how modern malware hides in plain sight and how defenders can invert that tactic to gain early visibility.</p>

<hr />

<h2 id="dead-drop-resolvers-the-modern-dead-drop">Dead Drop Resolvers: The Modern Dead Drop</h2>

<p>At the core of Spycraft 2.0 is the <strong>Dead Drop Resolver (DDR)</strong>, a digital version of Cold War tradecraft. Instead of placing a physical message in a park or under a brick, malware operators encode their C&amp;C addresses and host them inside public web services such as Pastebin, X.com, GitHub, or blockchain explorers. Once executed, the malware retrieves, decodes, and reconstructs the live C&amp;C endpoint.</p>

<p>DDR techniques are effective because they blend naturally with legitimate network activity. They exhibit several key traits:</p>

<ul>
  <li><strong>Anonymity and elasticity:</strong> each dead drop is disposable, hosted on reputable public domains that constantly change and scale.</li>
  <li><strong>Benign-looking traffic:</strong> HTTPS requests to popular platforms appear legitimate, making DDR fetches indistinguishable from normal user behavior.</li>
  <li><strong>Multi-layer manipulation:</strong> malware authors encode or encrypt data using multiple algorithms (e.g., Base64, XOR, rotation) to create layered transformations that resist brute-force decoding.</li>
</ul>

<p>This design allows DDR-based malware to persist even when individual endpoints are removed. Once one dead drop is taken down, the adversary can generate another using the same encoding methods. Reactive takedown strategies fail to scale. Our objective was to target the <em>techniques</em> rather than the <em>endpoints</em>.</p>

<p><img src="/assets/blogs/spycraft/ddr.png" alt="Illustrative dead drop resolver workflow" class="img-framed" width="80%" /></p>

<p class="figcaption">Razy’s DDR workflow. (1) The operator hides a manipulated C&amp;C address on X.com. (2) Razy fetches the dead drop after infection. (3) Layered decoding reveals the live C&amp;C rendezvous point.</p>

<hr />

<h2 id="from-reactive-to-proactive-defense">From Reactive to Proactive Defense</h2>

<p>Existing defenses against DDR activity focus on removing individual dead drops that are currently active. Each removal is temporary. Malware authors reuse the same manipulation logic to encode new C&amp;C addresses, generating polymorphic variants faster than defenders can remove them.</p>

<p>Our research proposed a different approach that targets the decoding logic rather than the infrastructure. Each DDR malware sample contains the algorithms it uses to decode its hidden C&amp;C data. If those algorithms can be isolated and analyzed, they can be repurposed into <em>recipes</em> that allow analysts and web providers to automatically uncover new, similarly encoded content across their platforms.</p>

<p>This insight formed the basis for a proactive remediation method. Instead of reacting to visible infections, we analyze the malware’s de-manipulation behavior to extract its decoding process and use it to anticipate future activity.</p>

<hr />

<h2 id="framework-from-localization-to-recipe-extraction">Framework: From Localization to Recipe Extraction</h2>

<p>We developed a systematic framework inspired by our research prototype <strong>VADER</strong> (<em>proactiVe deAd Drop rEsolver Remediation</em>). VADER analyzes malware binaries to uncover DDR behavior and derive reusable decoding recipes in three structured phases:</p>

<ol>
  <li>
    <p><strong>DDR logic localization.</strong><br />
The malware is instrumented to monitor data flow from web fetches to C&amp;C communications. When content retrieved from a public web service later initiates a C&amp;C connection, those execution paths are isolated to confirm DDR functionality.</p>
  </li>
  <li>
    <p><strong>Boundary isolation.</strong><br />
Once the relevant regions are identified, execution is paused around them to extract precise input and output boundaries. These boundaries define where the malware begins and ends its de-manipulation routines, enabling accurate symbolic state capture.</p>
  </li>
  <li>
    <p><strong>Symbolic recipe identification.</strong><br />
From these symbolic states, mathematical expressions (λ) are extracted to describe each transformation applied to the fetched data. These expressions are compared against a reference library of known algorithms (e.g., Base64, XOR, Base16, character rotation, etc.) to recover the complete decoding sequence used by the malware.</p>
  </li>
</ol>

<p><img src="/assets/blogs/spycraft/symbex.jpg" alt="Symbolic Expression Matching" class="img-framed" width="70%" /></p>

<p class="figcaption">VADER (1) injects symbolic data (λ) into the malware to localize DDR decoding logic and (2) generate a symbolic expression (Mλ). Reference decoder algorithms (e.g., Base16, XOR) are then symbolically executed using the same constraints to (3) produce comparable expressions (B16λ, XORλ). VADER first (4) performs structural matching between expressions, and if differences remain, uses a symbolic solver to evaluate their concrete outputs under identical constraints. A high ratio of matched paths (5) confirms that the malware routine and reference decoder are functionally equivalent.</p>

<p>This symbolic approach scales across malware families and isolates decoder logic with precision. Each specimen can be profiled automatically, the corresponding de-manipulation recipe extracted, and that recipe reused to locate dead drops before operators deploy malware.</p>

<h3 id="mudrop-case-study-proactive-dead-drop-discovery">Mudrop Case Study: Proactive Dead Drop Discovery</h3>

<p>The Mudrop case demonstrates how VADER transitions defenders from reactive response to proactive discovery. Once the symbolic de-manipulation recipe was recovered, we scanned WordPress posts, applied the recipe to decode them automatically, and identified three previously unknown dead drops prepared for use by the operator.</p>

<p class="figcaption"><img src="/assets/blogs/spycraft/mudrop.png" alt="Mudrop Proactive Discovery Placeholder" class="img-framed" width="80%" />
To overcome this challenge, VADER scans accessible WordPress posts or messages, decodes them using the de-manipulation recipe from Mudrop (Row 4), and extracts IPs or URLs via a regular expression. It then checks these against blocklists (e.g., VirusTotal, URLHaus) to classify web app accounts as dead drops for remediation. As this table shows, VADER proactively discovered three previously unknown WordPress dead drops-selfcut (Proactive Discovery 1), brainbot02 (Proactive Discovery 2), and suck4 (Proactive Discovery 3)-demonstrating its ability to detect varied content beyond direct matches.</p>

<p>The method generalizes across malware families. Even when two samples implement the same decoder differently (e.g., one as string operations, another as arithmetic transformations), symbolic comparison detects their shared logic. For complex, multi-stage decoders (e.g., Base16 followed by XOR and rotation), concolic execution and stepwise concretization reveal algorithmic boundaries, producing recipes accurate enough for automated detection.</p>

<hr />

<h2 id="operational-impact">Operational Impact</h2>

<p>We applied VADER to large-scale malware analysis and live web data collection with measurable results:</p>

<ul>
  <li>Analyzed <strong>100,000</strong> Windows samples from <strong>2012–2022</strong>, identifying <strong>DDR malware</strong> across <strong>110 families</strong>.</li>
  <li>Uncovered <strong>273 dead drops</strong> distributed over <strong>7 web applications</strong>. <strong>Pastebin</strong> accounted for <strong>68%</strong> of abuse, while <strong>blockchain explorers</strong> represented <strong>25%</strong> (including <strong>23 transaction IDs</strong> and <strong>14 wallet IDs</strong>).</li>
  <li>Extracted <strong>7 unique de-manipulation recipes</strong>, dominated by <strong>Base64</strong> (<strong>40%</strong>) and hybrid techniques combining <strong>string parsing</strong>, <strong>XOR</strong>, <strong>Base16</strong>, and <strong>rotation</strong>.</li>
  <li>Through coordinated remediation efforts, <strong>VADER neutralized 94.4%</strong> of identified dead drops, effectively disrupting <strong>6,674 malware samples</strong>.</li>
  <li>Integrating recipe-based detection improved DDR-related network visibility by <strong>57.1%</strong>, demonstrating VADER’s proactive detection capability.</li>
</ul>

<hr />

<h2 id="looking-ahead">Looking Ahead</h2>

<p>Dead Drop Resolvers represent a lasting evolution in adversarial strategy. By embedding hidden command infrastructure within trusted platforms, attackers exploit both platform trust and internet scalability. The challenge is not to find every endpoint but to identify the <em>patterns</em> that create them.</p>

<p>Our research shows that defenders can reuse the adversary’s decoding logic for advantage. By extracting symbolic recipes from malware, mapping them to known algorithms, and scanning proactively for those patterns, defenders can identify and remove malicious data before it becomes operational.</p>

<p>The full study, <strong><em>Enhanced Web Application Security Through Proactive Dead Drop Resolver Remediation</em></strong>, provides complete technical details, symbolic analysis methods, and collaborative results. This approach moves defense from chasing threats after compromise to dismantling the mechanisms that enable them.</p>

<ul>
  <li><a href="/publications/vader-dead-drop-resolver/">Publication summary and PDF</a></li>
</ul>

<p>Spycraft 2.0 may hide commands in plain sight, but with the right analysis pipeline, defenders can restore visibility and stay ahead of the next dead drop.</p>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="posts" /><category term="talks" /><category term="malware" /><category term="command-and-control" /><category term="dead drop resolvers" /><category term="research" /><summary type="html"><![CDATA[Turning dead drop resolver tradecraft against botnet operators, as presented at BSidesNYC 0x05.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/blogs/spycraft/thumbnail.png" /><media:content medium="image" url="http://localhost:4000/assets/blogs/spycraft/thumbnail.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Enhanced Web Application Security Through Proactive Dead Drop Resolver Remediation</title><link href="http://localhost:4000/publications/vader-dead-drop-resolver/" rel="alternate" type="text/html" title="Enhanced Web Application Security Through Proactive Dead Drop Resolver Remediation" /><published>2025-10-13T00:00:00-04:00</published><updated>2025-10-23T09:53:22-04:00</updated><id>http://localhost:4000/publications/vader</id><content type="html" xml:base="http://localhost:4000/publications/vader-dead-drop-resolver/"><![CDATA[<p><strong>Conference</strong>: 32nd ACM Conference on Computer and Communications Security (CCS), Taipei, Taiwan, 2025<br />
<strong>Authors</strong>: <u>Jonathan Fuller</u>*, M. Yao*, S. Agarwal, S. Barua, T. Hirani, A. K. Sikder, B. Saltaformaggio<br />
<strong>Acceptance Rate</strong>: 13.8%</p>

<h2 id="highlights">Highlights</h2>

<ul>
  <li>Detects and flags manipulated dead drops across seven popular web apps before attackers weaponize them.</li>
  <li>Automates layered de-manipulation, surfacing 57.1% more active C2 endpoints than signature-based tools.</li>
  <li>Delivers takedown intelligence that helped providers remove 13 hidden drop locations during evaluation.</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="/assets/papers/ccs25.pdf">PDF</a></li>
  <li><a href="https://github.com/CyFI-Lab-Public/VADER">Source code</a></li>
</ul>

<h2 id="abstract">Abstract</h2>

<p>Dead Drop Resolver (DDR) malware evades traditional Command and Control (C&amp;C) server takedowns by dynamically resolving C&amp;C addresses hosted on popular web applications, such as Dropbox and Pastebin. These addresses are often manipulated (i.e., encoded or encrypted), rendering existing detection techniques largely ineffective. To tackle this challenge, we introduce VADER, a malware forensics system specifically designed for the proactive detection of dead drops. Analyzing a dataset of 100k malware samples collected in the wild, VADER identified 8,906 DDR malware samples from 110 families that leverage 273 dead drops across seven web applications. Additionally, it proactively uncovered 57.1% more dead drops spanning 11 web applications. Case studies revealed that over 40% of DDR malware samples employ sophisticated, layered de-manipulation algorithms, highlighting the prevalence and complexity of this evasion technique. Beyond detection, VADER enabled proactive remediation by discovering 13 previously unknown dead drops from a single DDR malware sample. This approach empowers web application providers to systematically scan their platforms, enabling the early detection and mitigation of dead drops.</p>

<h2 id="artifact-badges">Artifact Badges</h2>

<ul>
  <li>Available</li>
  <li>Functional</li>
  <li>Reproduced</li>
</ul>

<h2 id="media-coverage">Media Coverage</h2>

<ul>
  <li><a href="https://www.deeptempo.ai/blogs/dead-drop-resolvers-malwares-quiet-rendezvous-and-why-adaptive-defense-matters">Deeptempo AI - Malware’s Quiet Rendezvous</a></li>
  <li><a href="https://research.gatech.edu/hiding-plain-sight-disrupting-malwares-secret-web-dead-drops">Georgia Tech Research - Hiding in Plain Sight</a></li>
  <li><a href="https://research.gatech.edu/hiding-plain-sight-disrupting-malwares-secret-web-dead-drops">The Hacker News - Weekly Recap</a></li>
</ul>

<h2 id="bibtex">BibTeX</h2>

<div class="language-bibtex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">@inproceedings</span><span class="p">{</span><span class="nl">fuller2025vader</span><span class="p">,</span>
  <span class="na">title</span>     <span class="p">=</span> <span class="s">{Enhanced Web Application Security Through Proactive Dead Drop Resolver Remediation}</span><span class="p">,</span>
  <span class="na">author</span>    <span class="p">=</span> <span class="s">{Fuller, Jonathan and Yao, Mingxuan and Agarwal, Saumya and Barua, Srimanta and Hirani, Taleb and Sikder, Amit K. and Saltaformaggio, Brendan}</span><span class="p">,</span>
  <span class="na">booktitle</span> <span class="p">=</span> <span class="s">{Proceedings of the 32nd ACM Conference on Computer and Communications Security (CCS)}</span><span class="p">,</span>
  <span class="na">year</span>      <span class="p">=</span> <span class="s">{2025}</span><span class="p">,</span>
  <span class="na">address</span>   <span class="p">=</span> <span class="s">{Taipei, Taiwan}</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="publications" /><category term="malware" /><category term="command-and-control" /><category term="dead drops" /><category term="web-security" /><summary type="html"><![CDATA[Proactive detection and remediation of Dead Drop Resolver malware on web applications, accepted to ACM CCS 2025 (13.8% acceptance rate).]]></summary></entry><entry><title type="html">Operationalizing Zero Trust: CECOM SEC and West Point Collaborate</title><link href="http://localhost:4000/publications/operationalizing-zero-trust/" rel="alternate" type="text/html" title="Operationalizing Zero Trust: CECOM SEC and West Point Collaborate" /><published>2025-09-11T00:00:00-04:00</published><updated>2025-10-23T14:21:03-04:00</updated><id>http://localhost:4000/publications/operationalizing-zero-trust</id><content type="html" xml:base="http://localhost:4000/publications/operationalizing-zero-trust/"><![CDATA[<p><strong>Venue</strong>: U.S. Army<br />
<strong>Authors</strong>: F. Shah, <u>Jonathan Fuller</u><br />
<strong>Date</strong>: September 11, 2025</p>

<h2 id="highlights">Highlights</h2>

<ul>
  <li>Details the first practical evaluation of the SEC-developed mapping between Zero Trust principles and the DoD Risk Management Framework.</li>
  <li>Shares insights from the joint U.S. Army CECOM Software Engineering Center and West Point collaboration on adoption challenges.</li>
  <li>Captures feedback loops needed to operationalize Zero Trust across Army systems and accreditation processes.</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://www.army.mil/article/288418">Official article</a></li>
</ul>

<h2 id="abstract">Abstract</h2>

<p>The Communications-Electronics Command Software Engineering Center and the U.S. Military Academy at West Point partnered to test the feasibility of the SEC-developed mapping between Zero Trust and the Department of Defense Risk Management Framework. This effort marked the first practical exercise to gather feedback on the mapping’s application and to identify adjustments needed to operationalize Zero Trust within Army environments.</p>

<h2 id="media-coverage">Media Coverage</h2>

<ul>
  <li><a href="https://www.executivegov.com/articles/army-zero-trust-mapping-cecom-sec-west-point">Army Operationalizes Zero Trust</a></li>
</ul>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="publications" /><category term="zero-trust" /><category term="DoW" /><category term="risk-management" /><summary type="html"><![CDATA[Field collaboration between CECOM SEC and West Point to validate Zero Trust mappings to the DoD Risk Management Framework.]]></summary></entry><entry><title type="html">CS 483: Digital Forensics</title><link href="http://localhost:4000/teaching/2025-01-15-cs483-digital-forensics/" rel="alternate" type="text/html" title="CS 483: Digital Forensics" /><published>2025-01-15T00:00:00-05:00</published><updated>2025-10-23T06:50:16-04:00</updated><id>http://localhost:4000/teaching/cs483-digital-forensics</id><content type="html" xml:base="http://localhost:4000/teaching/2025-01-15-cs483-digital-forensics/"><![CDATA[<p>Digital Forensics explores the evidence left behind when malicious activity occurs on an information system. Students build on earlier work in operating systems, file formats, file system structures, computer architecture, and networking to perform disciplined investigations.</p>

<p><strong>Institution:</strong> United States Military Academy<br />
<strong>Department:</strong> Department of Electrical Engineering and Computer Science<br />
<strong>Location:</strong> West Point, NY<br />
<strong>Role:</strong> Course Director<br />
<strong>Term:</strong> Spring 2025</p>

<p>The course begins with a guided review of foundational concepts, then advances into locating and extracting digital evidence. Students tackle three self-directed projects and multiple in-class challenges that require them to apply forensic techniques, communicate findings, and articulate mitigation strategies.</p>

<h3 id="learning-objectives">Learning Objectives</h3>

<p>Upon successful completion, students are able to:</p>

<ul>
  <li>Apply a scientific methodology to the acquisition and analysis of digital evidence.</li>
  <li>Use multiple software tools to acquire and analyze digital evidence.</li>
  <li>Explain digital forensics concepts, results, and conclusions to both technical and non-technical audiences.</li>
  <li>Demonstrate an understanding of the processes and tooling required to reverse engineer malware.</li>
  <li>Perform memory forensics to hunt for adversary and criminal activity.</li>
</ul>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="teaching" /><summary type="html"><![CDATA[Undergraduate course examining how to recover and analyze evidence after malicious activity on information systems.]]></summary></entry><entry><title type="html">CS 483: Digital Forensics</title><link href="http://localhost:4000/teaching/2024-01-15-cs483-digital-forensics/" rel="alternate" type="text/html" title="CS 483: Digital Forensics" /><published>2024-01-15T00:00:00-05:00</published><updated>2025-10-23T06:50:16-04:00</updated><id>http://localhost:4000/teaching/cs483-digital-forensics</id><content type="html" xml:base="http://localhost:4000/teaching/2024-01-15-cs483-digital-forensics/"><![CDATA[<p>Digital Forensics introduces students to the evidence left behind when malicious activity occurs on an information system. Building on operating systems, file formats, file system structures, computer architecture, and networking, they practice disciplined investigations across end hosts and enterprise environments.</p>

<p><strong>Institution:</strong> United States Military Academy<br />
<strong>Department:</strong> Department of Electrical Engineering and Computer Science<br />
<strong>Location:</strong> West Point, NY<br />
<strong>Role:</strong> Course Director<br />
<strong>Term:</strong> Spring 2024</p>

<p>Throughout the semester students complete three self-directed projects and a series of in-class challenges that require them to acquire data, interpret artifacts, and communicate findings to technical and non-technical audiences. The capstone focus is on applying science-based methodologies across host-based forensics, malware triage, and memory analysis to detect and disrupt adversary activity.</p>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="teaching" /><summary type="html"><![CDATA[Undergraduate course examining how to recover and analyze digital evidence after malicious activity on information systems.]]></summary></entry><entry><title type="html">COP 630: Cyber Law and Digital Forensics</title><link href="http://localhost:4000/teaching/2023-10-01-cyber-law-digital-forensics/" rel="alternate" type="text/html" title="COP 630: Cyber Law and Digital Forensics" /><published>2023-10-01T00:00:00-04:00</published><updated>2025-10-23T06:50:16-04:00</updated><id>http://localhost:4000/teaching/cyber-law-digital-forensics</id><content type="html" xml:base="http://localhost:4000/teaching/2023-10-01-cyber-law-digital-forensics/"><![CDATA[<p>Cyber Law and Digital Forensics examines the U.S. and international legal frameworks that govern cyber operations and the collection of digital evidence. The course builds on COP 620 and blends legal analysis with hands-on forensic practice in a virtual lab environment.</p>

<p><strong>Institution:</strong> University of Maryland Global Campus<br />
<strong>Department:</strong> School of Cybersecurity and Information Technology<br />
<strong>Location:</strong> Virtual<br />
<strong>Role:</strong> Course Instructor<br />
<strong>Term:</strong> Fall 2023<br />
<strong>Credits:</strong> 6</p>

<p>Students explore three interlocking modules:</p>

<ol>
  <li><strong>Legal Frameworks.</strong> Study U.S. statutory and case law, international norms, and rules of engagement that shape cyber operations.</li>
  <li><strong>Operational Compliance.</strong> Design and defend a cyber-offense campaign that remains compliant with U.S. regulations and policy constraints.</li>
  <li><strong>Applied Digital Forensics.</strong> Use industry tools to acquire and analyse evidence from network captures, storage media, and RAM across common operating systems and devices.</li>
</ol>

<p>Throughout the term, learners execute labs in a virtualized environment, document chain of custody, and deliver expert-witness style reports tying technical findings back to legal requirements.</p>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="teaching" /><summary type="html"><![CDATA[Graduate-level exploration of cyber law and applied digital forensics, delivered in a virtual environment.]]></summary></entry><entry><title type="html">Invited Tutorial: Counteracting Web Application Abuse in Malware</title><link href="http://localhost:4000/publications/secdev-tutorial-web-application-abuse/" rel="alternate" type="text/html" title="Invited Tutorial: Counteracting Web Application Abuse in Malware" /><published>2023-09-18T00:00:00-04:00</published><updated>2025-10-27T10:56:48-04:00</updated><id>http://localhost:4000/publications/secdev-tutorial-marsea</id><content type="html" xml:base="http://localhost:4000/publications/secdev-tutorial-web-application-abuse/"><![CDATA[<p><strong>Conference</strong>: IEEE Secure Development Conference (SecDev): Invited Tutorial<br />
<strong>Authors</strong>: M. Yao, <u>Jonathan Fuller</u>, R. Pai Sridhar, S. Agarwal, A. K. Sikder, B. Saltaformaggio</p>

<h2 id="highlights">Highlights</h2>

<ul>
  <li>Distills forensic best practices for identifying and containing Web App-Engaged malware across popular web platforms.</li>
  <li>Showcases the Marsea pipeline, enabling responders to document proof-of-abuse and coordinate takedowns with service providers.</li>
  <li>Features a 90-minute mix of tool walkthroughs and labs, giving participants practical experience handling WAE incidents end-to-end.</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="">PDF</a></li>
  <li><a href="https://github.com/CyFI-Lab-Public/MARSEA">Source code</a></li>
</ul>

<h2 id="abstract">Abstract</h2>

<p>Web applications offer a broad range of functionalities that are exploited by malware to serve as alternatives to traditional attacker-controlled servers. To effectively combat these Web App-Engaged (WAE) malware, prompt coordination between incident responders and web application providers is crucial. Any delay in this collaboration can allow WAE malware to flourish, posing serious security risks to the compromised web applications.</p>

<p>Our tutorial is designed to enlighten attendees on the best practices for forensic analysis of malware, while also helping to assess the scope of infection caused by WAE malware. Additionally, we will discuss the essential “proof-of-abuse” documentation required to facilitate groundbreaking collaboration between incident responders and service providers.</p>

<p>To enhance the security awareness of incident responders and to streamline forensic analysis for quicker response times, we are offering a 90-minute tutorial. This educational session will address the unique challenges posed by WAE malware and explore specialized remediation techniques available through web application platforms. We will also unveil a recently-developed forensic tool designed specifically for handling WAE malware. The tutorial will be a hybrid experience, featuring both a walkthrough of this innovative tool and a hands-on exercise, enabling participants to use the tool for analyzing WAE malware effectively.</p>

<h2 id="bibtex">BibTeX</h2>

<div class="language-bibtex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">@inproceedings</span><span class="p">{</span><span class="nl">yao2023secdevtutorial</span><span class="p">,</span>
  <span class="na">title</span>     <span class="p">=</span> <span class="s">{Invited Tutorial: Counteracting Web Application Abuse in Malware}</span><span class="p">,</span>
  <span class="na">author</span>    <span class="p">=</span> <span class="s">{Yao, Mingxuan and Fuller, Jonathan and Pai Sridhar, Ranjita and Agarwal, Saumya and Sikder, Amit K. and Saltaformaggio, Brendan}</span><span class="p">,</span>
  <span class="na">booktitle</span> <span class="p">=</span> <span class="s">{Proceedings of the IEEE Secure Development Conference (SecDev)}</span><span class="p">,</span>
  <span class="na">year</span>      <span class="p">=</span> <span class="s">{2023}</span><span class="p">,</span>
  <span class="na">note</span>      <span class="p">=</span> <span class="s">{Invited Tutorial}</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="publications" /><category term="malware" /><category term="incident-response" /><category term="tutorials" /><summary type="html"><![CDATA[Hands-on SecDev tutorial that teaches incident responders how to triage and remediate Web App-Engaged malware using the Marsea toolchain.]]></summary></entry><entry><title type="html">Hiding in Plain Sight: An Empirical Study of Web Application Abuse in Malware</title><link href="http://localhost:4000/publications/marsea-web-application-abuse/" rel="alternate" type="text/html" title="Hiding in Plain Sight: An Empirical Study of Web Application Abuse in Malware" /><published>2023-08-09T00:00:00-04:00</published><updated>2025-10-23T10:34:13-04:00</updated><id>http://localhost:4000/publications/marsea</id><content type="html" xml:base="http://localhost:4000/publications/marsea-web-application-abuse/"><![CDATA[<p><strong>Conference</strong>: 32nd USENIX Security Symposium (USENIX Security), Anaheim, CA, 2023<br />
<strong>Authors</strong>: M. Yao, <u>Jonathan Fuller</u>, R. Pai Kasturi, S. Agarwal, A. K. Sikder, B. Saltaformaggio<br />
<strong>Acceptance Rate</strong>: 29.2%</p>

<h2 id="highlights">Highlights</h2>

<ul>
  <li>Identifies 893 web-application-engaged malware specimens across 97 families abusing 29 popular web applications.</li>
  <li>Measures a 226% surge in WAE malware since 2020 while observing a 13.7% drop in reliance on attacker-controlled servers.</li>
  <li>Delivers the Marsea pipeline, enabling responders and providers to remove over 50% of malicious web content encountered.</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="/assets/papers/sec23yao.pdf">PDF</a></li>
  <li><a href="https://www.usenix.org/system/files/sec23_slides_yao-mingxuan.pdf">Slides</a></li>
  <li><a href="https://www.youtube.com/watch?v=o0SWc0cwqy4">Talk recording</a></li>
  <li><a href="https://github.com/CyFI-Lab-Public/MARSEA">Source code</a></li>
</ul>

<h2 id="abstract">Abstract</h2>

<p>Web applications provide a wide array of utilities that are abused by malware as a replacement for traditional attacker-controlled servers. Thwarting these Web App-Engaged (WAE) malware requires rapid collaboration between incident responders and web app providers. Unfortunately, our research found that delays in this collaboration allow WAE malware to thrive. We developed Marsea, an automated malware analysis pipeline that studies WAE malware and enables rapid remediation. Given 10K malware samples, Marsea revealed 893 WAE malware in 97 families abusing 29 web apps. Our research uncovered a 226% increase in the number of WAE malware since 2020 and that malware authors are beginning to reduce their reliance on attacker-controlled servers. In fact, we found a 13.7% decrease in WAE malware relying on attacker-controlled servers. To date, we have used Marsea to collaborate with the web app providers to take down 50% of the malicious web app content.</p>

<h2 id="artifact-badges">Artifact Badges</h2>

<ul>
  <li>Available</li>
  <li>Functional</li>
</ul>

<h2 id="honors">Honors</h2>

<ul>
  <li>Invited tutorial at the 2023 IEEE Secure Development Conference (SecDev).</li>
</ul>

<h2 id="media-coverage">Media Coverage</h2>

<ul>
  <li><a href="https://research.gatech.edu/playing-hide-and-seek-new-breed-malware-threatening-millions-users">Georgia Tech - Playing Hide and seek with Malware</a></li>
  <li><a href="https://techxplore.com/news/2023-09-playing-malware-threatening-millions-users.html">TechXPlore - New Breed of Malware</a></li>
  <li><a href="https://www.techtimes.com/articles/296248/20230912/researchers-find-new-breed-malware-hiding-dropbox-discord.htm">TechTimes - Malware Hiding in Dropbox, Discord</a></li>
  <li><a href="">ILSoftware - Wep-App Engagnge Malware</a></li>
</ul>

<h2 id="bibtex">BibTeX</h2>

<div class="language-bibtex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">@inproceedings</span><span class="p">{</span><span class="nl">yao2023marsea</span><span class="p">,</span>
  <span class="na">title</span>     <span class="p">=</span> <span class="s">{Hiding in Plain Sight: An Empirical Study of Web Application Abuse in Malware}</span><span class="p">,</span>
  <span class="na">author</span>    <span class="p">=</span> <span class="s">{Yao, Meng and Fuller, Jonathan and Pai Kasturi, Ranjita and Agarwal, Saumya and Sikder, Amit K. and Saltaformaggio, Brendan}</span><span class="p">,</span>
  <span class="na">booktitle</span> <span class="p">=</span> <span class="s">{Proceedings of the 32nd USENIX Security Symposium (USENIX Security)}</span><span class="p">,</span>
  <span class="na">year</span>      <span class="p">=</span> <span class="s">{2023}</span><span class="p">,</span>
  <span class="na">address</span>   <span class="p">=</span> <span class="s">{Anaheim, CA}</span><span class="p">,</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="publications" /><category term="malware" /><category term="web-applications" /><category term="incident-response" /><summary type="html"><![CDATA[Large-scale analysis of web-application-engaged malware and the Marsea remediation pipeline, accepted to USENIX Security 2023 (29.2% acceptance rate).]]></summary></entry><entry><title type="html">Exploiting Malware Communication Protocols for Command-and-Control Server Infiltration</title><link href="http://localhost:4000/publications/the-byte-c2-infiltration/" rel="alternate" type="text/html" title="Exploiting Malware Communication Protocols for Command-and-Control Server Infiltration" /><published>2023-05-01T00:00:00-04:00</published><updated>2025-10-23T14:21:03-04:00</updated><id>http://localhost:4000/publications/the-byte-infiltration</id><content type="html" xml:base="http://localhost:4000/publications/the-byte-c2-infiltration/"><![CDATA[<p><strong>Venue</strong>: The Byte<br />
<strong>Author</strong>: <u>Jonathan Fuller</u><br />
<strong>Date</strong>: May 1, 2023</p>

<h2 id="highlights">Highlights</h2>

<ul>
  <li>Explores how malware communication protocol weaknesses enable covert infiltration of command-and-control infrastructure.</li>
  <li>Shares operational guidance for cyber operators confronting adversary C2 networks in the field.</li>
  <li>Bridges research findings with practitioner insights for the 780th Military Intelligence Brigade (Cyber).</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="/assets/papers/thebyte23.pdf">PDF</a></li>
</ul>

<h2 id="abstract">Abstract</h2>

<p>This article outlines methods for exploiting malware communication protocols to gain footholds inside adversary command-and-control servers. By analyzing protocol manipulation opportunities and applying lessons from battlefield operations, it demonstrates how defenders can turn the tables on malware operators to enable covert monitoring and disrupt hostile infrastructure.</p>]]></content><author><name>Jonathan Fuller</name><email>hello@empiricaldefense.com</email></author><category term="publications" /><category term="command-and-control" /><category term="forensics" /><summary type="html"><![CDATA[Article in The Byte detailing practical techniques for infiltrating C2 infrastructure by abusing malware communication protocols.]]></summary></entry></feed>